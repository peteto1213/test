name: Test Project
on:
  workflow_dispatch:
  push:
    branches:
      - main
env:
  MONGODB_DB_NAME: database_name
jobs:
    test:
        environment: testing
        env:
          MONGODB_CONNECTION_PROTOCOL: mongodb
          MONGODB_CLUSTER_ADDRESS: mongodb
          MONGODB_USERNAME: root
          MONGODB_PASSWORD: password
          PORT: 8080
        runs-on: ubuntu-latest
        container:
          image: node:18
        services:
          mongodb:
            image: mongo
            ports:
              - 27017:27017
            env:
              MONGODB_INITDB_ROOT_USERNAME: root
              MONGODB_INITDB_ROOT_PASSWORD: password
        steps:
            - name: Get code from repo
              uses: actions/checkout@v3
            - name: Install NodeJS
              uses: actions/setup-node@v3
              with:
                node-version: 18
            - name: Cache dependencies
              id: cache
              uses: actions/cache@v3
              with:
                path: ~/.npm
                key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
            - name: Install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm ci
            - name: Run tests
              id: run-test
              continue-on-error: true
              run: npm test
            - name: Print cluster name
              run: echo ${{ env.MONGODB_CLUSTER_NAME }}
            - name: Print secret
              run: echo ${{ secrets.TESTING_SECRET }}
            - name: Upload test report
              if: failure() && steps.run-test.outcome == 'failure'
              uses: actions/upload-artifact@v3
              with:
                name: test-report
                path: test.json
    build:
        needs: test
        runs-on: ubuntu-latest
        outputs:
          script-file: ${{ steps.publish.outputs.script-file }}
        steps:
            - name: Get code from repo
              uses: actions/checkout@v3
            - name: Install NodeJS
              uses: actions/setup-node@v3
              with:
                node-version: 18
            - name: Cache dependencies
              id: cache
              uses: actions/cache@v3
              with:
                path: ~/.npm
                key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
            - name: Install dependencies
              if: steps.cache.output.cache-hit != 'true'
              run: npm ci
            - name: Build project
              run: npm run build
            - name: Get JS filename
              id: publish
              run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                name: dist-files
                path: |
                  dist
                  package.json
    deploy:
        needs: build
        uses: ./.github/workflows/reusable.yml
        with:
          artifact-name: dist-files
    print-deploy-result:
      needs: deploy
      runs-on: ubuntu-latest
      steps:
        - name: Print deploy output
          run: echo "${{ needs.deploy.outputs.result }}"
    report:
      needs: deploy
      if: failure()
      runs-on: ubuntu-latest
      steps:
        - name: output information
          run: |
            echo "Sth went wrong"
            echo "${{ toJson(github) }}"
